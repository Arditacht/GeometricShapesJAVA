package GeometricObjects;

import java.awt.Color;
import static java.awt.Color.PINK;
import static java.awt.Color.WHITE;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.awt.Toolkit;
import java.awt.geom.Ellipse2D;
import java.text.DateFormat;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
/**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
*<pre>
*   Class           GeometricShapesGUI
*   File            GeometricShapesGUI.java
*   Description     This program displays the perimeter and the area of
*                   the given shapes after the user selects one of those and
*                   enter the valid data. 
*   @author         <i>Ardit Miftaraj & Jonida Durbaku</i>
*   Environment     PC, Windows 10, NetBeans IDE 8.2, jdk 1.8.0_221
*   Date            02/20/2020
*   @version        1.0.0
*   @see            javax.swing.JFrame
*</pre>
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
public class GeometricShapesGUI extends javax.swing.JFrame {

    StringBuffer display = new StringBuffer();
    Circle circle;
    Rectangle rectangle;
    Triangle triangle;
    DecimalFormat myFormat = new DecimalFormat("#,##0.00");
    /**
     * Creates new form GeometricShapesGUI
     */
    public GeometricShapesGUI() {
        initComponents();
        this.getRootPane().setDefaultButton(calculateJButton);
        //set icon for form
        this.setIconImage(Toolkit.getDefaultToolkit().getImage
        ("src/GeometricObjects/shapes.jpg"));
        //center JFrame at start
        this.setLocationRelativeTo(null);
        setDate();
    }
    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    *<pre>
    *	Method		setDate()
    *	Description     set the date with DateFormat
    *   @see            java.text.DateFormat
    *   @see            java.text.SimpleDateFormat
    *   @author         <i>Jonida Durbaku</i>
    *	Date            02/20/2020
    *   History Log     
    *</pre>
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
     public void setDate()
    {
        DateFormat dateFormat = new SimpleDateFormat ("MM/dd/yyyy");
        Date now = new Date ();
        this.setTitle("Geometric Shapes Calculator--"+ dateFormat.format(now));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        frameJTabbedPane = new javax.swing.JTabbedPane();
        mainJPanel = new javax.swing.JPanel();
        titleJLabel = new javax.swing.JLabel();
        selectShapeJLabel = new javax.swing.JLabel();
        selectShapeJComboBox = new javax.swing.JComboBox<>();
        circleJLabel = new javax.swing.JLabel();
        rectangleJLabel = new javax.swing.JLabel();
        triangleJLabel = new javax.swing.JLabel();
        triangleJPanel = new javax.swing.JPanel();
        calculateJButton = new javax.swing.JButton();
        triangleJScrollPane = new javax.swing.JScrollPane();
        triangleJTextArea = new javax.swing.JTextArea();
        verticesJPanel = new javax.swing.JPanel();
        x1JLabel = new javax.swing.JLabel();
        x1JTextField = new javax.swing.JTextField();
        y1JLabel = new javax.swing.JLabel();
        y1JTextField = new javax.swing.JTextField();
        x2JLabel = new javax.swing.JLabel();
        x2JTextField = new javax.swing.JTextField();
        y2JLabel = new javax.swing.JLabel();
        y2JTextField = new javax.swing.JTextField();
        x3JLabel = new javax.swing.JLabel();
        x3JTextField = new javax.swing.JTextField();
        y3JLabel = new javax.swing.JLabel();
        y3JTextField = new javax.swing.JTextField();
        displayTriangleJScrollPane = new javax.swing.JScrollPane();
        displayTriangleJTextArea = new javax.swing.JTextArea();
        circleJPanel = new javax.swing.JPanel();
        circleJScrollPane = new javax.swing.JScrollPane();
        circleJTextArea = new javax.swing.JTextArea();
        displayCircleJScrollPane = new javax.swing.JScrollPane();
        displayCircleJTextArea = new javax.swing.JTextArea();
        radiusJPanel = new javax.swing.JPanel();
        radiusJLabel = new javax.swing.JLabel();
        radiusJTextField = new javax.swing.JTextField();
        calculateCircleJButton = new javax.swing.JButton();
        rectangleJPanel = new javax.swing.JPanel();
        rectangleJScrollPane = new javax.swing.JScrollPane();
        rectangleJTextArea = new javax.swing.JTextArea();
        displayRectangleJScrollPane = new javax.swing.JScrollPane();
        displayRectangleJTextArea = new javax.swing.JTextArea();
        calculateRectangleJButton = new javax.swing.JButton();
        dimensionsJPanel = new javax.swing.JPanel();
        widthJLabel = new javax.swing.JLabel();
        widthJTextField = new javax.swing.JTextField();
        heightJLabel = new javax.swing.JLabel();
        heightJTextField = new javax.swing.JTextField();
        frameJMenuBar = new javax.swing.JMenuBar();
        fileJMenu = new javax.swing.JMenu();
        clearJMenuItem = new javax.swing.JMenuItem();
        printJMenuItem = new javax.swing.JMenuItem();
        exitJMenuItem = new javax.swing.JMenuItem();
        geometryJMenu = new javax.swing.JMenu();
        mainJMenuItem = new javax.swing.JMenuItem();
        triangleJMenuItem = new javax.swing.JMenuItem();
        circleJMenuItem = new javax.swing.JMenuItem();
        rectangleJMenuItem = new javax.swing.JMenuItem();
        drawJMenu = new javax.swing.JMenu();
        drawTriangleJMenuItem = new javax.swing.JMenuItem();
        drawCircleJMenuItem = new javax.swing.JMenuItem();
        drawRectangleJMenuItem = new javax.swing.JMenuItem();
        helpJMenu = new javax.swing.JMenu();
        aboutJMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        frameJTabbedPane.setBackground(new java.awt.Color(204, 102, 0));
        frameJTabbedPane.setTabPlacement(javax.swing.JTabbedPane.RIGHT);
        frameJTabbedPane.setToolTipText("");

        mainJPanel.setBackground(new java.awt.Color(255, 153, 153));

        titleJLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        titleJLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleJLabel.setText("Welcome to Geometric Shapes Calculator");

        selectShapeJLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        selectShapeJLabel.setText("Select Geometric Figure:");

        selectShapeJComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<Select>", "Triangle", "Circle", "Rectangle" }));
        selectShapeJComboBox.setToolTipText("Select the shape");
        selectShapeJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectShapeJComboBoxActionPerformed(evt);
            }
        });

        circleJLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GeometricObjects/circle1.gif"))); // NOI18N
        circleJLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                circleJLabelMouseClicked(evt);
            }
        });

        rectangleJLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GeometricObjects/rectangle.gif"))); // NOI18N
        rectangleJLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rectangleJLabelMouseClicked(evt);
            }
        });

        triangleJLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GeometricObjects/triangle.gif"))); // NOI18N
        triangleJLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                triangleJLabelMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout mainJPanelLayout = new javax.swing.GroupLayout(mainJPanel);
        mainJPanel.setLayout(mainJPanelLayout);
        mainJPanelLayout.setHorizontalGroup(
            mainJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainJPanelLayout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(mainJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainJPanelLayout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(titleJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(mainJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(triangleJLabel)
                        .addGroup(mainJPanelLayout.createSequentialGroup()
                            .addComponent(selectShapeJLabel)
                            .addGap(0, 0, 0)
                            .addComponent(selectShapeJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(mainJPanelLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(circleJLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(rectangleJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31))
        );
        mainJPanelLayout.setVerticalGroup(
            mainJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainJPanelLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(titleJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addGroup(mainJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(selectShapeJLabel)
                    .addComponent(selectShapeJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 99, Short.MAX_VALUE)
                .addGroup(mainJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(rectangleJLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE)
                    .addGroup(mainJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(circleJLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE)
                        .addComponent(triangleJLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(31, 31, 31))
        );

        frameJTabbedPane.addTab("Main", mainJPanel);

        triangleJPanel.setBackground(new java.awt.Color(255, 204, 153));

        calculateJButton.setBackground(new java.awt.Color(255, 255, 102));
        calculateJButton.setText("Calculate");
        calculateJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calculateJButtonActionPerformed(evt);
            }
        });

        triangleJTextArea.setEditable(false);
        triangleJTextArea.setColumns(20);
        triangleJTextArea.setLineWrap(true);
        triangleJTextArea.setRows(5);
        triangleJTextArea.setText("Enter three vertices for triangle to compute the perimeter and the area if the input is valid. The input is valid if the sum of every pair of two sides is greater than the remaining side.");
        triangleJScrollPane.setViewportView(triangleJTextArea);

        verticesJPanel.setBackground(new java.awt.Color(204, 102, 0));
        verticesJPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Vertices of Triangle", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 3, 11))); // NOI18N
        verticesJPanel.setLayout(new java.awt.GridLayout(3, 4, 5, 5));

        x1JLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        x1JLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        x1JLabel.setText("x1:");
        verticesJPanel.add(x1JLabel);

        x1JTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        x1JTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                x1JTextFieldFocusLost(evt);
            }
        });
        verticesJPanel.add(x1JTextField);

        y1JLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        y1JLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        y1JLabel.setText("y1:");
        verticesJPanel.add(y1JLabel);

        y1JTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        y1JTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                y1JTextFieldFocusLost(evt);
            }
        });
        verticesJPanel.add(y1JTextField);

        x2JLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        x2JLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        x2JLabel.setText("x2:");
        verticesJPanel.add(x2JLabel);

        x2JTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        x2JTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                x2JTextFieldFocusLost(evt);
            }
        });
        verticesJPanel.add(x2JTextField);

        y2JLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        y2JLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        y2JLabel.setText("y2:");
        verticesJPanel.add(y2JLabel);

        y2JTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        y2JTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                y2JTextFieldFocusLost(evt);
            }
        });
        verticesJPanel.add(y2JTextField);

        x3JLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        x3JLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        x3JLabel.setText("x3:");
        verticesJPanel.add(x3JLabel);

        x3JTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        x3JTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                x3JTextFieldFocusLost(evt);
            }
        });
        verticesJPanel.add(x3JTextField);

        y3JLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        y3JLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        y3JLabel.setText("y3:");
        verticesJPanel.add(y3JLabel);

        y3JTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        y3JTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                y3JTextFieldFocusLost(evt);
            }
        });
        verticesJPanel.add(y3JTextField);

        displayTriangleJTextArea.setEditable(false);
        displayTriangleJTextArea.setColumns(20);
        displayTriangleJTextArea.setLineWrap(true);
        displayTriangleJTextArea.setRows(5);
        displayTriangleJTextArea.setWrapStyleWord(true);
        displayTriangleJScrollPane.setViewportView(displayTriangleJTextArea);

        javax.swing.GroupLayout triangleJPanelLayout = new javax.swing.GroupLayout(triangleJPanel);
        triangleJPanel.setLayout(triangleJPanelLayout);
        triangleJPanelLayout.setHorizontalGroup(
            triangleJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, triangleJPanelLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(triangleJScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addComponent(displayTriangleJScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
            .addGroup(triangleJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(verticesJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, triangleJPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(calculateJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(54, 54, 54))
        );
        triangleJPanelLayout.setVerticalGroup(
            triangleJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(triangleJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(verticesJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addComponent(calculateJButton)
                .addGap(18, 18, 18)
                .addGroup(triangleJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(displayTriangleJScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(triangleJScrollPane))
                .addGap(20, 20, 20))
        );

        frameJTabbedPane.addTab("Triangle", triangleJPanel);

        circleJPanel.setBackground(new java.awt.Color(102, 153, 0));

        circleJTextArea.setEditable(false);
        circleJTextArea.setColumns(20);
        circleJTextArea.setLineWrap(true);
        circleJTextArea.setRows(5);
        circleJTextArea.setText("Enter the radius of the circle in order to calculate its perimeter and area.\nRadius (0,500)");
        circleJScrollPane.setViewportView(circleJTextArea);

        displayCircleJTextArea.setEditable(false);
        displayCircleJTextArea.setColumns(20);
        displayCircleJTextArea.setLineWrap(true);
        displayCircleJTextArea.setRows(5);
        displayCircleJTextArea.setWrapStyleWord(true);
        displayCircleJScrollPane.setViewportView(displayCircleJTextArea);

        radiusJPanel.setBackground(new java.awt.Color(102, 153, 0));
        radiusJPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Circle Radius", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 3, 11))); // NOI18N
        radiusJPanel.setLayout(new java.awt.GridLayout(1, 2, 5, 5));

        radiusJLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        radiusJLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        radiusJLabel.setText("Radius:");
        radiusJPanel.add(radiusJLabel);

        radiusJTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        radiusJTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                radiusJTextFieldFocusLost(evt);
            }
        });
        radiusJPanel.add(radiusJTextField);

        calculateCircleJButton.setBackground(new java.awt.Color(255, 255, 102));
        calculateCircleJButton.setText("Calculate");
        calculateCircleJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calculateCircleJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout circleJPanelLayout = new javax.swing.GroupLayout(circleJPanel);
        circleJPanel.setLayout(circleJPanelLayout);
        circleJPanelLayout.setHorizontalGroup(
            circleJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(circleJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(circleJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, circleJPanelLayout.createSequentialGroup()
                        .addGap(0, 34, Short.MAX_VALUE)
                        .addComponent(circleJScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(displayCircleJScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18))
                    .addGroup(circleJPanelLayout.createSequentialGroup()
                        .addComponent(radiusJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, circleJPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(calculateCircleJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49))
        );
        circleJPanelLayout.setVerticalGroup(
            circleJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, circleJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(radiusJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44)
                .addGroup(circleJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(circleJPanelLayout.createSequentialGroup()
                        .addComponent(calculateCircleJButton)
                        .addGap(18, 18, 18)
                        .addComponent(displayCircleJScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(circleJScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        frameJTabbedPane.addTab("Circle", circleJPanel);

        rectangleJPanel.setBackground(new java.awt.Color(0, 102, 204));

        rectangleJTextArea.setEditable(false);
        rectangleJTextArea.setColumns(20);
        rectangleJTextArea.setLineWrap(true);
        rectangleJTextArea.setRows(5);
        rectangleJTextArea.setText("Enter the width and the height of the rectangle.");
        rectangleJScrollPane.setViewportView(rectangleJTextArea);

        displayRectangleJTextArea.setEditable(false);
        displayRectangleJTextArea.setColumns(20);
        displayRectangleJTextArea.setLineWrap(true);
        displayRectangleJTextArea.setRows(5);
        displayRectangleJTextArea.setWrapStyleWord(true);
        displayRectangleJScrollPane.setViewportView(displayRectangleJTextArea);

        calculateRectangleJButton.setBackground(new java.awt.Color(255, 255, 102));
        calculateRectangleJButton.setText("Calculate");
        calculateRectangleJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calculateRectangleJButtonActionPerformed(evt);
            }
        });

        dimensionsJPanel.setBackground(new java.awt.Color(0, 102, 204));
        dimensionsJPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Dimensions of Rectangle", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 3, 11))); // NOI18N
        dimensionsJPanel.setLayout(new java.awt.GridLayout(2, 2, 5, 5));

        widthJLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        widthJLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        widthJLabel.setText("Width:");
        dimensionsJPanel.add(widthJLabel);

        widthJTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        widthJTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                widthJTextFieldFocusLost(evt);
            }
        });
        dimensionsJPanel.add(widthJTextField);

        heightJLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        heightJLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        heightJLabel.setText("Height:");
        dimensionsJPanel.add(heightJLabel);

        heightJTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        heightJTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                heightJTextFieldFocusLost(evt);
            }
        });
        dimensionsJPanel.add(heightJTextField);

        javax.swing.GroupLayout rectangleJPanelLayout = new javax.swing.GroupLayout(rectangleJPanel);
        rectangleJPanel.setLayout(rectangleJPanelLayout);
        rectangleJPanelLayout.setHorizontalGroup(
            rectangleJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rectangleJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(rectangleJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, rectangleJPanelLayout.createSequentialGroup()
                        .addComponent(dimensionsJPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(245, 245, 245))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, rectangleJPanelLayout.createSequentialGroup()
                        .addGap(0, 34, Short.MAX_VALUE)
                        .addGroup(rectangleJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, rectangleJPanelLayout.createSequentialGroup()
                                .addComponent(rectangleJScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(displayRectangleJScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, rectangleJPanelLayout.createSequentialGroup()
                                .addComponent(calculateRectangleJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(49, 49, 49))))))
        );
        rectangleJPanelLayout.setVerticalGroup(
            rectangleJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, rectangleJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(dimensionsJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addComponent(calculateRectangleJButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(rectangleJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(displayRectangleJScrollPane, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rectangleJScrollPane, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22))
        );

        frameJTabbedPane.addTab("Rectangle", rectangleJPanel);

        fileJMenu.setMnemonic('F');
        fileJMenu.setText("File");
        fileJMenu.setToolTipText("File");

        clearJMenuItem.setMnemonic('l');
        clearJMenuItem.setText("Clear");
        clearJMenuItem.setToolTipText("Clear the entered data");
        clearJMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearJMenuItemActionPerformed(evt);
            }
        });
        fileJMenu.add(clearJMenuItem);

        printJMenuItem.setMnemonic('P');
        printJMenuItem.setText("Print");
        printJMenuItem.setToolTipText("Print the result");
        printJMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printJMenuItemActionPerformed(evt);
            }
        });
        fileJMenu.add(printJMenuItem);

        exitJMenuItem.setMnemonic('x');
        exitJMenuItem.setText("Exit");
        exitJMenuItem.setToolTipText("End the program");
        exitJMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitJMenuItemActionPerformed(evt);
            }
        });
        fileJMenu.add(exitJMenuItem);

        frameJMenuBar.add(fileJMenu);

        geometryJMenu.setMnemonic('G');
        geometryJMenu.setText("Geometry");
        geometryJMenu.setToolTipText("Geometry");

        mainJMenuItem.setMnemonic('M');
        mainJMenuItem.setText("Main");
        mainJMenuItem.setToolTipText("Main window");
        mainJMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mainJMenuItemActionPerformed(evt);
            }
        });
        geometryJMenu.add(mainJMenuItem);

        triangleJMenuItem.setMnemonic('T');
        triangleJMenuItem.setText("Triangle");
        triangleJMenuItem.setToolTipText("Triangle window");
        triangleJMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                triangleJMenuItemActionPerformed(evt);
            }
        });
        geometryJMenu.add(triangleJMenuItem);

        circleJMenuItem.setMnemonic('C');
        circleJMenuItem.setText("Circle");
        circleJMenuItem.setToolTipText("Circle window");
        circleJMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                circleJMenuItemActionPerformed(evt);
            }
        });
        geometryJMenu.add(circleJMenuItem);

        rectangleJMenuItem.setMnemonic('R');
        rectangleJMenuItem.setText("Rectangle");
        rectangleJMenuItem.setToolTipText("Rectangle window");
        rectangleJMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rectangleJMenuItemActionPerformed(evt);
            }
        });
        geometryJMenu.add(rectangleJMenuItem);

        frameJMenuBar.add(geometryJMenu);

        drawJMenu.setMnemonic('D');
        drawJMenu.setText("Draw Figures");
        drawJMenu.setToolTipText("Draw shapes");

        drawTriangleJMenuItem.setMnemonic('r');
        drawTriangleJMenuItem.setText("Draw Triangle");
        drawTriangleJMenuItem.setToolTipText("Draw triengle");
        drawTriangleJMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                drawTriangleJMenuItemActionPerformed(evt);
            }
        });
        drawJMenu.add(drawTriangleJMenuItem);

        drawCircleJMenuItem.setMnemonic('a');
        drawCircleJMenuItem.setText("Draw Circle");
        drawCircleJMenuItem.setToolTipText("Draw Circle");
        drawCircleJMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                drawCircleJMenuItemActionPerformed(evt);
            }
        });
        drawJMenu.add(drawCircleJMenuItem);

        drawRectangleJMenuItem.setMnemonic('w');
        drawRectangleJMenuItem.setText("Draw Rectangle");
        drawRectangleJMenuItem.setToolTipText("Draw rectagle");
        drawRectangleJMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                drawRectangleJMenuItemActionPerformed(evt);
            }
        });
        drawJMenu.add(drawRectangleJMenuItem);

        frameJMenuBar.add(drawJMenu);

        helpJMenu.setMnemonic('H');
        helpJMenu.setText("Help");
        helpJMenu.setToolTipText("Help");

        aboutJMenuItem.setMnemonic('A');
        aboutJMenuItem.setText("About");
        aboutJMenuItem.setToolTipText("Info for the program");
        aboutJMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutJMenuItemActionPerformed(evt);
            }
        });
        helpJMenu.add(aboutJMenuItem);

        frameJMenuBar.add(helpJMenu);

        setJMenuBar(frameJMenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(frameJTabbedPane)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(frameJTabbedPane, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

// public class CirclePanel extends JPanel
//{
//    
//    public CirclePanel()
//  {
//    setPreferredSize( new Dimension(400, 400) );
//    setBackground( Color.WHITE );
//    
//  }
//  
//  public void paintComponent ( Graphics gr )
//  { 
//      super.paintComponent(gr);
//        Graphics2D g = (Graphics2D) gr;
////        g.setRenderingHint(
////            RenderingHints.KEY_ANTIALIASING,
////            RenderingHints.VALUE_ANTIALIAS_ON);
//gr.setColor( Color.YELLOW );
//        double radius = 100;
//        //new Ellipse2D.Double();
//        double x = getWidth()/2;
//        double y = getHeight()/2;
//        g.draw(new Ellipse2D.Double(x -radius, y -radius, radius*2 , radius*2 ));
//       // g.fill(new Ellipse2D.Double(x - radius, y - radius, radius * 2, radius * 2));
//        //g.fillOval(new Ellipse2D.Double(x - radius, y - radius, radius * 2, radius * 2));
//
//        g.drawString("At " + x + ", " + y, 10, 30);
////    //super.paintComponent( gr );
////    
////    // Determine the center of the panel
////    int cntrX = getWidth()/2;
////    int cntrY = getHeight()/2;
////    
////    // Calculate the radius
////    int radius = 20;
////    
////    
////    gr.setColor(Color.BLACK);
////    //gr.drawString(radius + "cm", cntrX, cntrY-5);
////    gr.drawLine(getWidth()/2,0,getWidth()/2,getHeight());
////    gr.drawLine(0,getHeight()/2,getWidth(),getHeight()/2);
////    // Draw the Circle
////    gr.setColor( Color.YELLOW );
////    gr.fillOval( cntrX-radius, cntrY-radius, radius*2, radius*2 );
////    gr.setColor( Color.GREEN );
////    gr.drawOval( cntrX-radius, cntrY-radius, radius*2, radius*2 );
////    gr.drawLine(cntrX, cntrY, getWidth()/2+radius, cntrY);
////    gr.setColor(Color.BLACK);
////    gr.drawString(radius + "cm", cntrX, cntrY-5);
//   }
//}
 /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    *<pre>
    *	Method		calculateJButtonActionPerformed()
    *	Description     calculates the area and perimeter of trianlge
    *   @author         <i>Ardit Miftaraj</i>
    *	Date            02/20/2020 
    *</pre>
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    private void calculateJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calculateJButtonActionPerformed
        try
        {
        if(isInteger(x1JTextField.getText())&&
           isInteger(y1JTextField.getText())&& 
           isInteger(x2JTextField.getText())&&
           isInteger(y2JTextField.getText())&&
           isInteger(x3JTextField.getText())&& 
           isInteger(y3JTextField.getText()))
        {
        int x1 = Integer.parseInt(x1JTextField.getText());
        int y1 = Integer.parseInt(y1JTextField.getText());
        int x2 = Integer.parseInt(x2JTextField.getText());
        int y2 = Integer.parseInt(y2JTextField.getText());
        int x3 = Integer.parseInt(x3JTextField.getText());
        int y3 = Integer.parseInt(y3JTextField.getText());
        
        triangle = new Triangle(x1,y1,x2,y2,x3,y3);
        if(triangle.isValid())
        {
            displayTriangleJTextArea.setText(displayTriangle().toString());
        }
        else
            displayTriangleJTextArea.setText("This is not a Valid Triangle!");
        }
        else
             JOptionPane.showMessageDialog(null, "Incorrect Value",
                    "Input Error", JOptionPane.WARNING_MESSAGE);
        
        }
        catch(NumberFormatException ex)
        {
            JOptionPane.showMessageDialog(null, "Incorrect Value",
                    "Input Error", JOptionPane.WARNING_MESSAGE);
        }

    }//GEN-LAST:event_calculateJButtonActionPerformed

     /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    *<pre>
    *	Method		isInteger()
    *	Description     method that validates the input for vertices of the triangle
    *   @author         <i>Ardit Miftaraj</i>
    *	Date            02/20/2020 
    *</pre>
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    public static boolean isInteger(String fieldValue)
    {
        boolean result =true;
        
        Pattern pat = Pattern.compile("-?[1-9]\\d*|0");//Beginers book regular expresions website look
        Matcher mat = pat.matcher(fieldValue);
        if(mat.matches())
        {
            try
            {
            int number = Integer.parseInt(fieldValue);
            if (number<-500 || number > 500) {
                result=false;
            }
            }
            catch(NumberFormatException exp)
            {
                result = false;
            }
        }
        else
            result=false;
        
        return result;
    }
    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    *<pre>
    *	Method		calculateCircleJButtonActionPerformed()
    *	Description     calculates the area and perimeter of the circle
    *   @author         <i>Jonida Durbaku</i>
    *	Date            02/20/2020 
    *</pre>
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    private void calculateCircleJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calculateCircleJButtonActionPerformed
        try
        {
        if(isValidRadius(radiusJTextField.getText()))
        {
        double radius = Double.parseDouble(radiusJTextField.getText());
        circle =new Circle(radius);
        displayCircleJTextArea.setText(displayCircle().toString());
        }
        else
             JOptionPane.showMessageDialog(null, "Incorrect Value",
                    "Radius Error", JOptionPane.WARNING_MESSAGE);
        
        }
        catch(NumberFormatException ex)
        {
            JOptionPane.showMessageDialog(null, "Incorrect Value",
                    "Radius Error", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_calculateCircleJButtonActionPerformed
/**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    *<pre>
    *	Method		displayCircle()
    *	Description     fills the JTextArea of the circle after calculations
    *   @author         <i>Jonida Durbaku</i>
    *	Date            02/20/2020 
    *</pre>
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    public StringBuffer displayCircle()
    {
        display.delete(0, display.length()); //clear display
        display.append("The perimeter of circle with radius "+
                myFormat.format(circle.getRadius())+" is " + 
                myFormat.format(circle.getPerimeter())+ "\n");
        display.append('\n');
        display.append("The same circle has an area of "+
                myFormat.format(circle.getArea())+ "\n");
        display.append('\n');
        display.append(circle.printCircle() + "\n");
        display.append('\n');
        return display;
    }
    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    *<pre>
    *	Method		displayRectangle()
    *	Description     fills the JTextArea of the rectangle after calculations
    *   @author         <i>Jonida Durbaku</i>
    *	Date            02/20/2020 
    *</pre>
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    public StringBuffer displayRectangle()
    {
        display.delete(0, display.length()); //clear display
        display.append("The perimeter of rectangle with width "+
                myFormat.format(rectangle.getWidth())+" and height "+ 
                myFormat.format(rectangle.getHeight()) +" is " + 
                myFormat.format(rectangle.getPerimeter())+ "\n");
        display.append('\n');
        display.append("The same rectangle has an area of "+
                myFormat.format(rectangle.getArea())+ "\n");
        display.append('\n');
        display.append(rectangle.printRectangle() + "\n");
        display.append('\n');
        return display;
    }
    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    *<pre>
    *	Method		displayTriangle()
    *	Description     fills the JTextArea of the triangle after calculations
    *   @author         <i>Jonida Durbaku</i>
    *	Date            02/20/2020 
    *</pre>
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    public StringBuffer displayTriangle()
    {
        display.delete(0, display.length()); //clear display
        display.append("The perimeter of triangle with verteces "+
                triangle.showVertices() + 
                myFormat.format(triangle.getPerimeter())+ "\n");
        display.append('\n');
        display.append("The same triangle has an area of "+
                myFormat.format(triangle.getArea())+ "\n");
        display.append('\n');
        display.append(triangle.printTriangle() + "\n");
        display.append('\n');
        return display;
    }
    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    *<pre>
    *	Method		radiusJTextFieldFocusLost()
    *	Description     changes the background color of the JTextField
    *   @author         <i>Jonida Durbaku</i>
    *	Date            02/20/2020 
    *</pre>
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    private void radiusJTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_radiusJTextFieldFocusLost
        String input = radiusJTextField.getText();
        if(isValidRadius(input))
        {
            radiusJTextField.setBackground(WHITE);
        }
        else
            radiusJTextField.setBackground(PINK);
    }//GEN-LAST:event_radiusJTextFieldFocusLost
   /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    *<pre>
    *	Method		calculateRectangleJButtonActionPerformed()
    *	Description     calculates the area and perimeter of the rectangle
    *   @author         <i>Jonida Durbaku</i>
    *	Date            02/20/2020 
    *</pre>
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    private void calculateRectangleJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calculateRectangleJButtonActionPerformed
        try
        {
        if(isValidRadius(widthJTextField.getText())&& isValidRadius(heightJTextField.getText()))
        {
        double width = Double.parseDouble(widthJTextField.getText());
        double height = Double.parseDouble(heightJTextField.getText());
       
        rectangle =new Rectangle(width, height);
        displayRectangleJTextArea.setText(displayRectangle().toString());
        }
        else
             JOptionPane.showMessageDialog(null, "Incorrect Value",
                    "Radius Error", JOptionPane.WARNING_MESSAGE);
        
        }
        catch(NumberFormatException ex)
        {
            JOptionPane.showMessageDialog(null, "Incorrect Value",
                    "Radius Error", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_calculateRectangleJButtonActionPerformed
 /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    *<pre>
    *	Method		widthJTextFieldFocusLost()
    *	Description     changes the background color of the JTextField
    *   @author         <i>Jonida Durbaku</i>
    *	Date            02/20/2020 
    *</pre>
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    private void widthJTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_widthJTextFieldFocusLost
        String input = widthJTextField.getText();
        if(isValidRadius(input))
        {
            widthJTextField.setBackground(WHITE);
        }
        else
            widthJTextField.setBackground(PINK);
    }//GEN-LAST:event_widthJTextFieldFocusLost
 /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    *<pre>
    *	Method		heightJTextFieldFocusLost()
    *	Description     changes the background color of the JTextField
    *   @author         <i>Jonida Durbaku</i>
    *	Date            02/20/2020 
    *</pre>
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    private void heightJTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_heightJTextFieldFocusLost
        String input = heightJTextField.getText();
        if(isValidRadius(input))
        {
            heightJTextField.setBackground(WHITE);
        }
        else
            heightJTextField.setBackground(PINK);
    }//GEN-LAST:event_heightJTextFieldFocusLost
 /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    *<pre>
    *	Method		x1JTextFieldFocusLost()
    *	Description     changes the background color of the JTextField
    *   @author         <i>Jonida Durbaku</i>
    *	Date            02/20/2020 
    *</pre>
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    private void x1JTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_x1JTextFieldFocusLost
        String input = x1JTextField.getText();
        if(isInteger(input))
        {
            x1JTextField.setBackground(WHITE);
        }
        else
            x1JTextField.setBackground(PINK);
    }//GEN-LAST:event_x1JTextFieldFocusLost
 /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    *<pre>
    *	Method		x2JTextFieldFocusLost()
    *	Description     changes the background color of the JTextField
    *   @author         <i>Jonida Durbaku</i>
    *	Date            02/20/2020 
    *</pre>
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    private void x2JTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_x2JTextFieldFocusLost
        String input = x2JTextField.getText();
        if(isInteger(input))
        {
            x2JTextField.setBackground(WHITE);
        }
        else
            x2JTextField.setBackground(PINK);
    }//GEN-LAST:event_x2JTextFieldFocusLost
 /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    *<pre>
    *	Method		x3JTextFieldFocusLost()
    *	Description     changes the background color of the JTextField
    *   @author         <i>Jonida Durbaku</i>
    *	Date            02/20/2020 
    *</pre>
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    private void x3JTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_x3JTextFieldFocusLost
        String input = x3JTextField.getText();
        if(isInteger(input))
        {
            x3JTextField.setBackground(WHITE);
        }
        else
            x3JTextField.setBackground(PINK);
    }//GEN-LAST:event_x3JTextFieldFocusLost
 /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    *<pre>
    *	Method		y1JTextFieldFocusLost()
    *	Description     changes the background color of the JTextField
    *   @author         <i>Jonida Durbaku</i>
    *	Date            02/20/2020 
    *</pre>
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    private void y1JTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_y1JTextFieldFocusLost
       String input = y1JTextField.getText();
        if(isInteger(input))
        {
            y1JTextField.setBackground(WHITE);
        }
        else
            y1JTextField.setBackground(PINK);
    }//GEN-LAST:event_y1JTextFieldFocusLost
 /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    *<pre>
    *	Method		y2JTextFieldFocusLost()
    *	Description     changes the background color of the JTextField
    *   @author         <i>Jonida Durbaku</i>
    *	Date            02/20/2020 
    *</pre>
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    private void y2JTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_y2JTextFieldFocusLost
        String input = y2JTextField.getText();
        if(isInteger(input))
        {
            y2JTextField.setBackground(WHITE);
        }
        else
            y2JTextField.setBackground(PINK);
    }//GEN-LAST:event_y2JTextFieldFocusLost
 /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    *<pre>
    *	Method		y3JTextFieldFocusLost()
    *	Description     changes the background color of the JTextField
    *   @author         <i>Jonida Durbaku</i>
    *	Date            02/20/2020 
    *</pre>
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    private void y3JTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_y3JTextFieldFocusLost
        String input = y3JTextField.getText();
        if(isInteger(input))
        {
            y3JTextField.setBackground(WHITE);
        }
        else
            y3JTextField.setBackground(PINK);
    }//GEN-LAST:event_y3JTextFieldFocusLost
 /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    *<pre>
    *	Method		triangleJMenuItemActionPerformed()
    *	Description     selects triangle panel 
    *   @author         <i>Jonida Durbaku</i>
    *	Date            02/20/2020 
    *</pre>
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    private void triangleJMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_triangleJMenuItemActionPerformed
        //int index = 1;
        frameJTabbedPane.setSelectedIndex(frameJTabbedPane.getTabCount()-3);
        calculateJButton.requestFocus(true);
    }//GEN-LAST:event_triangleJMenuItemActionPerformed
 /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    *<pre>
    *	Method		circleJMenuItemActionPerformed()
    *	Description     selects circle panel 
    *   @author         <i>Jonida Durbaku</i>
    *	Date            02/20/2020 
    *</pre>
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    private void circleJMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_circleJMenuItemActionPerformed
        //int index = 2;
        frameJTabbedPane.setSelectedIndex(frameJTabbedPane.getTabCount()-2);
        calculateCircleJButton.requestFocus(true);
    }//GEN-LAST:event_circleJMenuItemActionPerformed
 /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    *<pre>
    *	Method		rectangleJMenuItemActionPerformed()
    *	Description     selects rectangle panel 
    *   @author         <i>Jonida Durbaku</i>
    *	Date            02/20/2020 
    *</pre>
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    private void rectangleJMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rectangleJMenuItemActionPerformed
//       int index = frameJTabbedPane.getTabCount()-1;
        frameJTabbedPane.setSelectedIndex(frameJTabbedPane.getTabCount()-1);
        calculateRectangleJButton.requestFocus(true);
    }//GEN-LAST:event_rectangleJMenuItemActionPerformed
 /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    *<pre>
    *	Method		mainJMenuItemActionPerformed()
    *	Description     selects main panel 
    *   @author         <i>Jonida Durbaku</i>
    *	Date            02/20/2020 
    *</pre>
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    private void mainJMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mainJMenuItemActionPerformed
        //int index = 0;
        frameJTabbedPane.setSelectedIndex(frameJTabbedPane.getTabCount()-frameJTabbedPane.getTabCount());
    }//GEN-LAST:event_mainJMenuItemActionPerformed
 /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    *<pre>
    *	Method		selectShapeJComboBoxActionPerformed()
    *	Description     selects the right panel according to JComboBox 
    *   @author         <i>Jonida Durbaku</i>
    *	Date            02/20/2020 
    *</pre>
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    private void selectShapeJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectShapeJComboBoxActionPerformed
        frameJTabbedPane.setSelectedIndex(selectShapeJComboBox.getSelectedIndex());
        if (selectShapeJComboBox.getSelectedIndex()==1) {
            calculateJButton.requestFocus(true);
        }
        else if (selectShapeJComboBox.getSelectedIndex()==2) {
            calculateCircleJButton.requestFocus(true);
        }
        else if (selectShapeJComboBox.getSelectedIndex()==3) {
            calculateRectangleJButton.requestFocus(true);
        }
        selectShapeJComboBox.setSelectedIndex(0);
    }//GEN-LAST:event_selectShapeJComboBoxActionPerformed
/**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    *<pre>
    *	Method		circleJLabelMouseClicked()
    *	Description     selcts the circle panel  
    *   @author         <i>Jonida Durbaku</i>
    *	Date            02/20/2020 
    *</pre>
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    private void circleJLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_circleJLabelMouseClicked
         frameJTabbedPane.setSelectedIndex(2);
         calculateCircleJButton.requestFocus(true);
    }//GEN-LAST:event_circleJLabelMouseClicked
/**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    *<pre>
    *	Method		triangleJLabelMouseClicked()
    *	Description     selcts the triangle panel  
    *   @author         <i>Jonida Durbaku</i>
    *	Date            02/20/2020 
    *</pre>
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    private void triangleJLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_triangleJLabelMouseClicked
        frameJTabbedPane.setSelectedIndex(1);
        calculateJButton.requestFocus(true);
    }//GEN-LAST:event_triangleJLabelMouseClicked
/**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    *<pre>
    *	Method		rectangleJLabelMouseClicked()
    *	Description     selcts the rectangle panel  
    *   @author         <i>Jonida Durbaku</i>
    *	Date            02/20/2020 
    *</pre>
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    private void rectangleJLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rectangleJLabelMouseClicked
        frameJTabbedPane.setSelectedIndex(3);
        calculateRectangleJButton.requestFocus(true);
    }//GEN-LAST:event_rectangleJLabelMouseClicked
/**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    *<pre>
    *	Method		aboutJMenuItemActionPerformed
    *	Description     displays the about form
    *	@param		evt java.awt.event.ActionEvent
    *	@author         <i>Jonida Durbaku</i>
    *	Date            02/20/2020
    *</pre>
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/ 
    private void aboutJMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutJMenuItemActionPerformed
       GeometricAbout myAbout = new GeometricAbout(this,true);
       myAbout.setVisible(true);
    }//GEN-LAST:event_aboutJMenuItemActionPerformed

    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    *<pre>
    *	Method		clearJMenuItemActionPerformed
    *	Description     Reset the app from the beggining
    *	@param		evt java.awt.event.ActionEvent
    *	@author         <i>Jonida Durbaku</i>
    *	Date            02/20/2020
    *</pre>
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/ 
    private void clearJMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearJMenuItemActionPerformed
       x1JTextField.setText("");
       x2JTextField.setText("");
       x3JTextField.setText("");
       y1JTextField.setText("");
       y2JTextField.setText("");
       y3JTextField.setText("");
       displayTriangleJTextArea.setText("");
       displayCircleJTextArea.setText("");
       displayRectangleJTextArea.setText("");
       widthJTextField.setText("");
       heightJTextField.setText("");
       radiusJTextField.setText("");    
    }//GEN-LAST:event_clearJMenuItemActionPerformed

    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    *<pre>
    *	Method          printFormJMenuItem1ActionPerformed()
    *	Description     Calls the printcomponent method from the provided
    *                   PrintUtilities class
    *	@param	        evt java.awt.event.ActionEvent
    *   @see            PrintUtilities.java
    *	@author         <i>Jonida Durbaku</i>
    *	Date            02/20/2020
    *   History Log    
    *</pre>
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    private void printJMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printJMenuItemActionPerformed
       PrintUtilities.printComponent(this);
    }//GEN-LAST:event_printJMenuItemActionPerformed

    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    *<pre>
    *	Method          exitJMenuItemActionPerformed()
    *	Description     exitJButton get clicked 
    *	@param	        evt java.awt.event.ActionEvent
    *	@author         <i>Jonida Durbaku</i>
    *	Date            02/20/2020
    *   History Log    
    *</pre>
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    private void exitJMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitJMenuItemActionPerformed
        this.dispose();
    }//GEN-LAST:event_exitJMenuItemActionPerformed
/**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    *<pre>
    *	Method		drawCircleJMenuItemActionPerformed()
    *	Description     draw the circle with the appropriate properties
    *   @author         <i>Ardit Miftaraj</i>
    *	Date            02/20/2020 
    *</pre>
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    private void drawCircleJMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_drawCircleJMenuItemActionPerformed
try
        {
            Draw draw = new Draw();
            draw.setRadius(circle.getRadius());
            draw.setFilled(circle.isFilled());
            System.out.println(""+circle.isFilled());
            draw.setColor(circle.retriveColor());
            JFrame canvas = new JFrame();
            canvas.setIconImage(Toolkit.getDefaultToolkit().getImage
        ("src/GeometricObjects/shapes.jpg"));
        //center JFrame at start
        canvas.setLocationRelativeTo(null);
        setDate();
            canvas.setSize(400, 400);
            canvas.add(draw);
            canvas.setVisible(true);
            draw.setVisible(true);
            
        }
            catch(Exception ex)
            {
                JOptionPane.showMessageDialog(null, "Incorrect Value",
                    "Radius Error", JOptionPane.WARNING_MESSAGE);
            }
    }//GEN-LAST:event_drawCircleJMenuItemActionPerformed

    private void drawTriangleJMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_drawTriangleJMenuItemActionPerformed
        try
        {
            DrawTriangle draw = new DrawTriangle();
            draw.setVertices(triangle.getX1(),triangle.getY1(),triangle.getX2(),triangle.getY2(),triangle.getX3(),triangle.getY3());
            
            draw.setFilled(triangle.isFilled());
            System.out.println(""+triangle.isFilled());
            draw.setColor(triangle.retriveColor());
            JFrame canvas = new JFrame();
            canvas.setIconImage(Toolkit.getDefaultToolkit().getImage
        ("src/GeometricObjects/shapes.jpg"));
        //center JFrame at start
        canvas.setLocationRelativeTo(null);
        setDate();
            canvas.setSize(400, 400);
            canvas.add(draw);
            canvas.setVisible(true);
            draw.setVisible(true);
            
        }
            catch(Exception ex)
            {
                JOptionPane.showMessageDialog(null, "Incorrect Value",
                    "rectangle Error", JOptionPane.WARNING_MESSAGE);
            }
    }//GEN-LAST:event_drawTriangleJMenuItemActionPerformed

    private void drawRectangleJMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_drawRectangleJMenuItemActionPerformed
        try
        {
            DrawRectangle draw = new DrawRectangle();
            draw.setFilled(rectangle.isFilled());
            draw.setWidth(rectangle.getWidth());
            draw.setHeight(rectangle.getHeight());
            draw.setFilled(rectangle.isFilled());
            System.out.println(""+rectangle.isFilled());
            draw.setColor(rectangle.retriveColor());
            JFrame canvas = new JFrame();
            canvas.setIconImage(Toolkit.getDefaultToolkit().getImage
        ("src/GeometricObjects/shapes.jpg"));
        //center JFrame at start
        canvas.setLocationRelativeTo(null);
        setDate();
            canvas.setSize(400, 400);
            canvas.add(draw);
            canvas.setVisible(true);
            draw.setVisible(true);
            
        }
            catch(Exception ex)
            {
                JOptionPane.showMessageDialog(null, "Incorrect Value",
                    "rectangle Error", JOptionPane.WARNING_MESSAGE);
            }
    

    }//GEN-LAST:event_drawRectangleJMenuItemActionPerformed
/**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    *<pre>
    *	Method		isValidRadius()
    *	Description     Checks for valid doubles
    *   @author         <i>Jonida Durbaku</i>
    *	Date            02/20/2020 
    *</pre>
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
     public boolean isValidRadius(String fieldValue)
    {
        boolean result =true;
        
        Pattern pat = Pattern.compile("\\d+(\\.\\d+)?");//Beginers book regular expresions website look
        Matcher mat = pat.matcher(fieldValue);
        if (mat.matches())
        {
            try
            {
                double num = Double.parseDouble(fieldValue);
                if (num<0 || num>500) 
                {
                    result = false;
                }
            }
            catch(NumberFormatException ex)
            {
                result = false;
            }
        }
        else
        {
            result = false;
        }
        return result;
    }
     
    
     /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    *<pre>
    *	Method		main()
    *	Description     Call the contructor to create an instance of the form
    *	@param		args are the command line strings
    *	@author         <i>Jonida Durbaku</i>
    *	Date            01/21/2020
    *   History Log     
    *</pre>
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/ 
    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(GeometricShapesGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(GeometricShapesGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(GeometricShapesGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(GeometricShapesGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
                Splash mySplash = new Splash(3500);
                mySplash.showSplash();
                new GeometricShapesGUI().setVisible(true);
//            }
//        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem aboutJMenuItem;
    private javax.swing.JButton calculateCircleJButton;
    private javax.swing.JButton calculateJButton;
    private javax.swing.JButton calculateRectangleJButton;
    private javax.swing.JLabel circleJLabel;
    private javax.swing.JMenuItem circleJMenuItem;
    private javax.swing.JPanel circleJPanel;
    private javax.swing.JScrollPane circleJScrollPane;
    private javax.swing.JTextArea circleJTextArea;
    private javax.swing.JMenuItem clearJMenuItem;
    private javax.swing.JPanel dimensionsJPanel;
    private javax.swing.JScrollPane displayCircleJScrollPane;
    private javax.swing.JTextArea displayCircleJTextArea;
    private javax.swing.JScrollPane displayRectangleJScrollPane;
    private javax.swing.JTextArea displayRectangleJTextArea;
    private javax.swing.JScrollPane displayTriangleJScrollPane;
    private javax.swing.JTextArea displayTriangleJTextArea;
    private javax.swing.JMenuItem drawCircleJMenuItem;
    private javax.swing.JMenu drawJMenu;
    private javax.swing.JMenuItem drawRectangleJMenuItem;
    private javax.swing.JMenuItem drawTriangleJMenuItem;
    private javax.swing.JMenuItem exitJMenuItem;
    private javax.swing.JMenu fileJMenu;
    private javax.swing.JMenuBar frameJMenuBar;
    private javax.swing.JTabbedPane frameJTabbedPane;
    private javax.swing.JMenu geometryJMenu;
    private javax.swing.JLabel heightJLabel;
    private javax.swing.JTextField heightJTextField;
    private javax.swing.JMenu helpJMenu;
    private javax.swing.JMenuItem mainJMenuItem;
    private javax.swing.JPanel mainJPanel;
    private javax.swing.JMenuItem printJMenuItem;
    private javax.swing.JLabel radiusJLabel;
    private javax.swing.JPanel radiusJPanel;
    private javax.swing.JTextField radiusJTextField;
    private javax.swing.JLabel rectangleJLabel;
    private javax.swing.JMenuItem rectangleJMenuItem;
    private javax.swing.JPanel rectangleJPanel;
    private javax.swing.JScrollPane rectangleJScrollPane;
    private javax.swing.JTextArea rectangleJTextArea;
    private javax.swing.JComboBox<String> selectShapeJComboBox;
    private javax.swing.JLabel selectShapeJLabel;
    private javax.swing.JLabel titleJLabel;
    private javax.swing.JLabel triangleJLabel;
    private javax.swing.JMenuItem triangleJMenuItem;
    private javax.swing.JPanel triangleJPanel;
    private javax.swing.JScrollPane triangleJScrollPane;
    private javax.swing.JTextArea triangleJTextArea;
    private javax.swing.JPanel verticesJPanel;
    private javax.swing.JLabel widthJLabel;
    private javax.swing.JTextField widthJTextField;
    private javax.swing.JLabel x1JLabel;
    private javax.swing.JTextField x1JTextField;
    private javax.swing.JLabel x2JLabel;
    private javax.swing.JTextField x2JTextField;
    private javax.swing.JLabel x3JLabel;
    private javax.swing.JTextField x3JTextField;
    private javax.swing.JLabel y1JLabel;
    private javax.swing.JTextField y1JTextField;
    private javax.swing.JLabel y2JLabel;
    private javax.swing.JTextField y2JTextField;
    private javax.swing.JLabel y3JLabel;
    private javax.swing.JTextField y3JTextField;
    // End of variables declaration//GEN-END:variables
}
